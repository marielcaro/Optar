Methods=======Calendar.toString:Function toString() As string	Returns the current calendar formatted in a string variable	It obeys all the settings for starting the week on a given day, and 	uses the current year and month Calendar.startWeekOnDay:Sub startWeekOnDay(day as integer)	Set the day of the week that the calendar should start on	Sunday = 1, Monday = 2, Tuesday = 3 , Wednesday = 4, Thursday = 5, 	Friday = 6, Saturday = 7	These are the same settings Real Basic's DATE class uses	Calendar.daysInMonth:Function daysInMonth() As integer	Returns the number of days in the month the calendar is set to display	Calendar.setHiliteSelectedDay:Sub setHiliteSelectedDay(hiliteIt as boolean)	Sets whether the calendar hilites the selected day or not	Setting this false will make the calendar not hilite the selected day	Setting this true will make the calendar hilite the selected day	Calendar.setHiliteSelectedColor:Sub setHiliteSelectedColor(newColor as color)	Sets the color that	Calendar.selectDay:Sub selectDay(theDay as integer)	"Selects" the specified day and sets its hilite color to the Hilite Selected color	Calendar.month:Sub month(newMonth as integer)  Sets the month that the calendar will show from the specified yearCalendar.month:Function month() As integer	Get the month the calendar is showing	Calendar.year:Sub year(newYear as integer)	Set the year the calendar should show	Calendar.year:Function year() As integer	Get the year the calendar is showing	Calendar.setTextSize:Sub setTextSize(newSize as integer)	Set the size of the text the calendar uses	Calendar.setTextFont:Sub setTextFont(newFont as string)	Set the font of the text the calendar uses	Calendar.setBackDrop:Sub setBackDrop(p as picture)	Set the background picture the calendar uses	Calendar.setUseBackColor:Sub setUseBackColor(drawIt as boolean)	Sets whether the calendar should fill its background with the background color or not	Calendar.setBackgroundColor:Sub setBackgroundColor(newColor as Color)	Set the background color the calendar uses (may not show if 	there is a visible background picture)	Calendar.setTextColor:Sub setTextColor(newColor as color)	Set the color of the text the calendar uses		Calendar.setDayColor:Sub setDayColor(dayNum as integer, dayColor as color)	Hilite days with a certain color (this is not the same as the selected day)	For instance, you might use this to hilite a week in a different color than 	a selected day in that week	Calendar.clearDayColor:Sub clearDayColor(dayNum as integer)	Clears the hilite of a given day	Calendar.setBottomSpacing:Sub setBottomSpacing(offset as integer)	Sets the amount the text will be moved up from the bottom of the cell	Some fonts will require the use of this as the measurements returned bythe system do not 	completely account for the fonts actual rendering	Calendar.setRightSpacing:Sub setRightSpacing(offset as integer)	Sets the amount the text will be left from the right hand side of the cell	Some fonts will require the use of this as the measurements returned bythe system do not 	completely account for the fonts actual rendering and they will "spill over" into the next cellCalendar.setGridColor:Sub setGridColor(newColor as color)	Set the color of the gridlines and frame the calendar usesCalendar.setDrawFrame:Sub setDrawFrame(drawIt as boolean)	Sets whether or not the calendar should draw its frameCalendar.setDrawGrid:Sub setDrawGrid(drawit as boolean)	Sets whether or not the calendar should draw its gridlinesCalendar.setDayNames:Sub setDayNames(s as string)	A string of up to 7 characters to be used as the headings for the day names	This allow you to internationalize the day names for whatever locality you need	The default is English day names as follows		SMTWTFS 	in order Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday		They are ALWAYS specified in this order regardless of the other settings of the calendar	Calendar.redraw:Sub redraw()	A way to force the calendar to redraw without havung to use refreshEvents======Calendar.MouseDown:Function MouseDown(X As Integer, Y As Integer) As Boolean	The mouse has been clicked at the coordinates specified	  	Calendar.daySelected:Sub daySelected(dayNum as integer)	A day has been clicked on a day in the calendar	The day that was clieck is in the dayNum parameter	When a day is selected you will get both a MouseDown and DaySelected event	Calendar.Open:Sub Open()	Passed through to you to do initial set up		